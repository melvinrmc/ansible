---
- hosts: all
  become: true
  tasks:
  
  - name: Make sure firewalld service is stopped
    systemd:
      state: stopped
      name: firewalld
    ignore_errors: yes
      
  - name: Make sure firewalld service is disabled
    systemd:
      state: disabled
      name: firewalld
    ignore_errors: yes

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{item}}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: set enforce 0
    command: setenforce 0
    register: disable_selinux
    failed_when: disable_selinux.rc != 0 and disable_selinux.stderr not in "setenforce{{':'}} SELinux is disabled"
    when: ansible_os_family == 'RedHat'
      
  - debug:
      msg: "{{disable_selinux}}"
  
  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Add kubernetes repo
    yum_repository:
      name: kubernetes
      description: Kubernetes repo
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
    #when: setup=="public"

  - name: Add docker-ce-stable repo
    yum_repository:
      name: docker-ce
      description: docker-ce stable repo
      baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
      gpgkey: https://download.docker.com/linux/centos/gpg
      gpgcheck: yes
    #when: setup=="public"
     
  - name: Download epel-release-latest-7
    get_url:
      url: http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      dest: /tmp/epel-release-latest-7.noarch.rpm
      
  - name: Install epel-release-latest-7
    yum:
      name: /tmp/epel-release-latest-7.noarch.rpm
      state: present
         
  - name: install docker dependencies
    become: yes
    yum:
      name: "{{item}}"
      state: latest
    with_items:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      - policycoreutils-python
      - python-pip

  - name: Installs docker
    yum: 
      name: "{{item}}" # docker in some distros
      state: latest
    with_items:
      - docker-ce
      - docker-ce-cli
      - containerd.io
 
  - name: Create /etc/docker directory
    file:
      path: /etc/docker
      state: directory
    
  - name: Write variable to daemon.json file
    copy: content="{{daemon_json}}" dest=/etc/docker/daemon.json
    vars:  
      daemon_json: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2",
          "storage-opts": [
            "overlay2.override_kernel_check=true"
          ]
        }    

  - name: Create /etc/systemd/system/docker.service.d directory
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory

  - name: install kubeadm packages
    become: yes
    yum:
      name: "{{item}}"
      state: latest
      allow_downgrade: yes 
    with_items:
      - kubelet
      - kubeadm
      - kubectl

  - name: Enabling and Starting Kubernetes and Docker
    systemd:
      name: "{{item}}"
      enabled: yes
      state: started
    with_items:
      - kubelet
      - docker

  - name: Add netbridge config ip6
    lineinfile:
      path: /etc/sysctl.d/k8s.conf
      line: 'net.bridge.bridge-nf-call-ip6tables = 1'
      state: present
      create: yes

  - name: Add netbridge config ip4
    lineinfile:
      path: /etc/sysctl.d/k8s.conf
      line: 'net.bridge.bridge-nf-call-iptables = 1'
      state: present
      create: yes
      
  - name: update sysctl
    command: sysctl --system
    
  - name: echo "1" ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes
      
  - name: restart docker
    systemd: 
      name: docker 
      state: restarted
      daemon_reload: yes
      enabled: yes 
      
  - name: Kubelet service restart
    systemd:
      name: kubelet
      state: restarted
      daemon_reload: yes
      enabled: yes
    
  #- name: Initialize the Kubernetes cluster using kubeadm
  #  block:
  #    - name: cluster info
  #      command: kubectl cluster-info
  #      register: cluster_info_result
  #    - name: kubeadm init
  #      command: kubeadm init --pod-network-cidr=10.244.0.0/16
  #      register: cluster_init_result
  #      when: cluster_info_result.rc =! 0    
  #    - debug:
  #      msg: "{{cluster_init_result}}"
  #      when: cluster_info_result.rc =! 0


  - name: kubeadm join
    command: kubeadm join 172.31.29.31:6443 --token q4amol.zjq6e60zb9p82qqw --discovery-token-ca-cert-hash sha256:d43b2815749b06a526eeca58b58c990cf7c3c4647a91a0fe4196efc9894f793b
    
